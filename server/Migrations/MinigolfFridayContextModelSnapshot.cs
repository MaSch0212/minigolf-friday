// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MinigolfFriday.Data;

#nullable disable

namespace MinigolfFriday.Migrations
{
    [DbContext(typeof(MinigolfFridayContext))]
    partial class MinigolfFridayContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("MinigolfFriday.Data.PlayerEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Alias")
                        .HasColumnType("TEXT");

                    b.Property<string>("FacebookId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("WhatsAppNumber")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("PlayerEntityPlayerEntity", b =>
                {
                    b.Property<Guid>("AvoidId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AvoidedById")
                        .HasColumnType("TEXT");

                    b.HasKey("AvoidId", "AvoidedById");

                    b.HasIndex("AvoidedById");

                    b.ToTable("PlayerEntityPlayerEntity");
                });

            modelBuilder.Entity("PlayerEntityPlayerEntity1", b =>
                {
                    b.Property<Guid>("PreferId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PreferredById")
                        .HasColumnType("TEXT");

                    b.HasKey("PreferId", "PreferredById");

                    b.HasIndex("PreferredById");

                    b.ToTable("PlayerEntityPlayerEntity1");
                });

            modelBuilder.Entity("PlayerEntityPlayerEntity", b =>
                {
                    b.HasOne("MinigolfFriday.Data.PlayerEntity", null)
                        .WithMany()
                        .HasForeignKey("AvoidId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MinigolfFriday.Data.PlayerEntity", null)
                        .WithMany()
                        .HasForeignKey("AvoidedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PlayerEntityPlayerEntity1", b =>
                {
                    b.HasOne("MinigolfFriday.Data.PlayerEntity", null)
                        .WithMany()
                        .HasForeignKey("PreferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MinigolfFriday.Data.PlayerEntity", null)
                        .WithMany()
                        .HasForeignKey("PreferredById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
